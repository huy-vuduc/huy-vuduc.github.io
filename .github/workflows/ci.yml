name: CI

on:
  push:
    branches:
      - 'master'
  pull_request:
    branches:
      - '*'

jobs:
  lint:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip-ci]')"

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        env:
          CI: true
        with:
          node-version: 14.x

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys:
            ${{ runner.os }}-${{ env.cache-name }}

      - name: Install dependencies
        run: yarn install

      - name: Lint
        run: yarn lint

  check-type:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip-ci]')"

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        env:
          CI: true
        with:
          node-version: 14.x

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys:
            ${{ runner.os }}-${{ env.cache-name }}-${{ secrets.CACHE_VERSION }}

      - name: Install dependencies
        run: yarn install

      - name: Check type
        run: yarn type-check

  build:
    needs: [ 'lint', 'check-type' ]
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip-ci]')"

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        env:
          CI: true
        with:
          node-version: 14.x

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys:
            ${{ runner.os }}-${{ env.cache-name }}-${{ secrets.CACHE_VERSION }}

      - name: Install dependencies
        run: yarn install

      - name: Build
        run: yarn build

      - name: Export to static
        run: yarn export

      - name: Upload builded artifact
        uses: actions/upload-artifact@v2
        with:
          name: artifact
          path: out

  publish-page:
    needs: build
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip-ci]')"

    steps:
      - uses: actions/checkout@v2

      - name: Download builded artifact
        uses: actions/download-artifact@v2
        with:
          name: artifact
          path: out

      - name: Disable Jekyll processing
        run: touch out/.nojekyll

      - name: Deploy to GitHub Pages
        if: success()
        uses: crazy-max/ghaction-github-pages@v2
        with:
          target_branch: gh-pages
          build_dir: out
        env:
          GITHUB_TOKEN: ${{ secrets.DEPLOY_TOKEN }}
